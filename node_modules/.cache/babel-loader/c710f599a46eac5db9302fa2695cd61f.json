{"ast":null,"code":"import _slicedToArray from \"/Users/alexarriola/MentalHealthApp/mental-health-application/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexarriola/MentalHealthApp/mental-health-application/src/containers/ListItems.jsx\";\nimport React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport { Route, MemoryRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport JournalPage from './JournalPage'; // function ListItemLink(props) {\n//     const { icon, primary, to } = props;\n//     const renderLink = React.useMemo(\n//         () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n//         [to],\n//     );\n//     return (\n//         <li>\n//             <ListItem button component={renderLink}>\n//                 {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n//                 <ListItemText primary={primary} />\n//             </ListItem>\n//         </li>\n//     );\n// }\n// ListItemLink.propTypes = {\n//     icon: PropTypes.element,\n//     primary: PropTypes.string.isRequired,\n//     to: PropTypes.string.isRequired,\n// };\n\nconst useStyles = makeStyles({\n  root: {\n    width: 360\n  }\n});\nexport default function ListRouter() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(1),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        selectedIndex = _React$useState2[0],\n        setSelectedIndex = _React$useState2[1];\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  return (// <MemoryRouter initialEntries={['/']} initialIndex={0}>\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      selected: selectedIndex === 0,\n      onClick: event => handleListItemClick(event, 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(CalendarTodayIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: \"Emotions Calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(DescriptionIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: \"Help Articles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(ChatIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: \"Community\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      button: true,\n      component: Link,\n      to: \"/private-journal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(MenuBookIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: \"Private Journal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(ListItem, {\n      button: true,\n      component: Link,\n      to: \"/resources\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(LanguageIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: \"Resources\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })))) // </MemoryRouter >\n\n  );\n}","map":{"version":3,"sources":["/Users/alexarriola/MentalHealthApp/mental-health-application/src/containers/ListItems.jsx"],"names":["React","ListItem","ListItemIcon","ListItemText","CalendarTodayIcon","DescriptionIcon","ChatIcon","MenuBookIcon","LanguageIcon","PropTypes","makeStyles","List","Typography","Route","MemoryRouter","Link","JournalPage","useStyles","root","width","ListRouter","classes","useState","selectedIndex","setSelectedIndex","handleListItemClick","event","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport { Route, MemoryRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport JournalPage from './JournalPage';\n\n// function ListItemLink(props) {\n//     const { icon, primary, to } = props;\n\n//     const renderLink = React.useMemo(\n//         () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n//         [to],\n//     );\n\n//     return (\n//         <li>\n//             <ListItem button component={renderLink}>\n//                 {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n//                 <ListItemText primary={primary} />\n//             </ListItem>\n//         </li>\n//     );\n// }\n\n// ListItemLink.propTypes = {\n//     icon: PropTypes.element,\n//     primary: PropTypes.string.isRequired,\n//     to: PropTypes.string.isRequired,\n// };\n\nconst useStyles = makeStyles({\n    root: {\n        width: 360,\n    },\n});\n\nexport default function ListRouter() {\n    const classes = useStyles();\n\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n    const handleListItemClick = (event, index) => {\n        setSelectedIndex(index);\n    };\n\n    return (\n        // <MemoryRouter initialEntries={['/']} initialIndex={0}>\n        <div>\n            {/* <Route>\n                    {({ location }) => (\n                        <Typography gutterBottom>Current route: {location.pathname}</Typography>\n                    )}\n                </Route> */}\n            <List>\n                <ListItem button\n                    selected={selectedIndex === 0}\n                    onClick={event => handleListItemClick(event, 0)} >\n                    <ListItemIcon>\n                        <CalendarTodayIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Emotions Calendar\" />\n                </ListItem>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DescriptionIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Help Articles\" />\n                </ListItem>\n                <ListItem button>\n                    <ListItemIcon>\n                        <ChatIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Community\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/private-journal\">\n                    <ListItemIcon>\n                        <MenuBookIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Private Journal\" />\n                </ListItem>\n                <ListItem button component={Link} to=\"/resources\">\n                    <ListItemIcon>\n                        <LanguageIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Resources\" />\n                </ListItem>\n            </List>\n        </div>\n        // </MemoryRouter >\n    )\n}"]},"metadata":{},"sourceType":"module"}